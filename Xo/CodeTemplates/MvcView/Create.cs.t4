<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model <#= ViewDataTypeName #>
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>
<#
} else if(IsLayoutPageSelected) {
#>
@{
    Page.Title = "<#= ViewName#> a <#= ViewDataTypeShortName #>";
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}
<#
if(IsLayoutPageSelected && ReferenceScriptLibraries && IsBundleConfigPresent) {
#>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<#
}
#>
<#
else if(IsLayoutPageSelected && ReferenceScriptLibraries) {
#>
<script src="~/Scripts/jquery-<#= JQueryVersion #>.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<#
}
#>

@Html.Partial("_SubNav", new SubNav { Brand = "<#=PluralViewDataTypeShortName#>" })

<h1>@Page.Title</h1>
<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= ViewName #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>
<#
if (ReferenceScriptLibraries) {
#>
<#
    if (!IsLayoutPageSelected && IsBundleConfigPresent) {
#>
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")

<#
    }
#>
<#
    else if (!IsLayoutPageSelected) {
#>
<script src="~/Scripts/jquery-<#= JQueryVersion #>.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<#
    }
#>

<#
}
#>
<#
if(IsPartialView) {
#>
<#
    foreach (PropertyMetadata property in ModelMetadata.Properties) {
        if (property.Scaffold && !property.IsAutoGenerated && !property.IsAssociation) {
            // If the property is a primary key and Guid or Int, then the property is generated in 
            // the controller. Hence, this propery is not displayed on the view.
            if (property.IsPrimaryKey && (IsPropertyGuid(property) || IsPropertyInt(property))) {
                continue;
            } else {
#>
<div class="form-group">
    @Html.XoLabelFor(m => m.<#= property.PropertyName #>)
    <div class="col-md-5">
        @Html.EditorFor(m => m.<#= property.PropertyName #>)
    </div>
    <div class="col-md-5">
        @Html.ValidationMessageFor(m => m.<#= property.PropertyName #>)
    </div>
</div>

<#
            }
        }
    }
#>
<#
} else if(IsLayoutPageSelected) {
#>
<form action="" method="post" class="form-horizontal">
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.EditorForModel()
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="submit" class="btn btn-primary">Create</button>
            <a href="@Url.Action("Index")" class="btn btn-default">Cancel</a>
        </div>
    </div>
</form>
<#
}
#>
<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>